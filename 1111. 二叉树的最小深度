
111. 二叉树的最小深度


题目描述
评论 (172)
题解
提交记录
给定一个二叉树，找出其最小深度。

最小深度是从根节点到最近叶子节点的最短路径上的节点数量。

说明: 叶子节点是指没有子节点的节点。

示例:

给定二叉树 [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回它的最小深度  2.
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root == NULL)
            return 0;
        int l = minDepth(root->left), r = minDepth(root->right);
        return l && r ? min(l, r) + 1 : 1 + l + r; //注意：若左子树与右子树中只有一个为空，返回的不应该是两者中最小的，而是不为空的那个子树的高度
    }
};
