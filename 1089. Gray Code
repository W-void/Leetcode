// dfs+简单位操作
1089. Gray Code

The gray code is a binary numeral system where two successive values differ in only one bit.

Given a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. 
A gray code sequence must begin with 0.

Example 1:

Input: 2
Output: [0,1,3,2]
Explanation:
00 - 0
01 - 1
11 - 3
10 - 2

For a given n, a gray code sequence may not be uniquely defined.
For example, [0,2,3,1] is also a valid gray code sequence.

00 - 0
10 - 2
11 - 3
01 - 1
Example 2:

Input: 0
Output: [0]
Explanation: We define the gray code sequence to begin with 0.
             A gray code sequence of n has size = 2n, which for n = 0 the size is 20 = 1.
             Therefore, for n = 0 the gray code sequence is [0].
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
class Solution {
public:
    vector<int> ans;
    vector<int> grayCode(int n) {
        vector<int> vis(1<<n, 0);
        dfs(0, n, vis);  
        /* 网上搜的，格雷码等于i异或i-1
        for(int i=0; i<(1<<n); i++){
            ans.push_back(i^(i>>1));
        }
        */
        /* For example, when n=3, we can get the result based on n=2.00,01,11,10 -> (000,001,011,010 ) (110,111,101,100). 
        ans.push_back(0);
        for(int i=0; i<n; i++){
            int size = ans.size();
            for(int k = size-1; k>=0; k--)
                ans.push_back(ans[k] | 1<<i);
        }
        */
        return ans;
    }
    void dfs(int x, int& n, vector<int>& vis){
        ans.push_back(x);
        vis[x] = 1;
        for(int i=0; i<n; i++){
            int y = x^(1<<i);
            if(!vis[y])
                dfs(y, n, vis);
        }
    }
};
